- id: '1686305498315'
  alias: Pronote notif nouvelle note
  description: ''
  triggers:
  - event_type: pronote_event
    event_data:
      type: new_grade
    trigger: event
  actions:
  - data:
      message: '{{ trigger.event.data.child_nickname }} a eu {{  trigger.event.data.data.grade_out_of
        }} en {{ trigger.event.data.data.subject }} :  {{ trigger.event.data.data.comment
        }} le {{ trigger.event.data.data.date.strftime(''%d/%m/%Y'') }}'
      title: Pronote {{ trigger.event.data.child_nickname }} note
    action: notify.mobile_app_tel_thomas
  - data:
      message: '{{ trigger.event.data.child_nickname }} a eu {{  trigger.event.data.data.grade_out_of
        }} en {{ trigger.event.data.data.subject }} :  {{ trigger.event.data.data.comment
        }} le {{ trigger.event.data.data.date.strftime(''%d/%m/%Y'') }}'
      title: Pronote {{ trigger.event.data.child_nickname }} note
    action: notify.mobile_app_m2103k19pg
- id: '1686305498317'
  alias: 'Notification: modification emploi du temps'
  description: Pronote notif emploi du temps
  triggers:
  - entity_id:
    - sensor.pronote_beck_romain_timetable_period
    attribute: canceled_lessons_counter
    to:
    trigger: state
  conditions:
  - condition: template
    value_template: '{% set items = state_attr(''sensor.pronote_beck_romain_timetable_period'',
      ''lessons'') %}

      {{ true if items | selectattr(''canceled'', ''=='', true) | list or items |
      selectattr(''canceled'', ''=='', false) | selectattr(''status'', ''!='', none)
      | list else false }}

      '
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.pronote_beck_romain_timetable_period
      state: '0'
  actions:
  - data:
      title: Pronote
      message: "{% set items = state_attr('sensor.pronote_beck_romain_timetable_period','lessons')
        %} {%- for item in items  -%}\n  {%- if item.canceled == True -%}\n    {{
        item.lesson }} : {{ item.status }}, aujourd'hui de {{ item.start_time }} à
        {{ item.end_time}}{{\"\\n\"}}\n  {%- endif -%}\n  {%- if item.canceled ==
        false and item.status != None -%}\n    {{ item.lesson }} : {{ item.status
        }} le {{as_timestamp(item.start_at) | int | timestamp_custom('%d/%m/%Y', true)}}
        de {{ item.start_time }} à {{ item.end_time}}{{\"\\n\"}}\n  {%- endif -%}
        \     \n{%- endfor -%}"
    action: notify.mobile_app_tel_thomas
- id: '1734527631503'
  alias: Update notifications
  description: ''
  use_blueprint:
    path: mdegat01/update_notifications.yaml
    input:
      mobile_app_device_2: 7f1b5e5464c13e399f3a5e31c4b9a78f
      mobile_app_device: 7f1b5e5464c13e399f3a5e31c4b9a78f
      update_entities:
      - update.advanced_ssh_web_terminal_update
      - update.assist_microphone_update
      - update.browser_mod_update
      - update.card_mod_update
      - update.atomic_calendar_revive_update
      - update.auto_entities_update
      - update.bar_card_update
      - update.glances_update
      - update.google_fit_update
      - update.home_assistant_core_update
      - update.home_assistant_operating_system_update
      - update.hacs_update
      - update.home_assistant_supervisor_update
      - update.interrupteur
      - update.linky_content_card_update
      - update.graphite_theme_update
      - update.guirlande
      - update.lumiere_salle_a_manger
      - update.mini_graph_card_update
      - update.lovelace_meteofrance_weather_card_update
      - update.music_assistant_server_update
      - update.piper_update
      - update.plex_media_server_tower
      - update.plex_recently_added_update
      - update.pool_monitor_card_update
      - update.porcupine1_update
      - update.openwakeword_update
      - update.pronote_cards_update
      - update.myelectricaldata_update
      - update.node_red_companion_update
      - update.pronote_for_home_assistant_update
      - update.somfyprotect2mqtt_update
      - update.samba_share_update
      - update.stack_in_card_update
      - update.studio_code_server_update
      - update.scheduler_card_update
      - update.team_tracker_card_update
      - update.team_tracker_update
      - update.terminal_ssh_update
      - update.sonos_card_update
      - update.time_picker_card_update
      - update.whisper_update
      - update.upcoming_media_card_update
      only_after: 08:00:00
      only_before: '20:00:00'
      send_to_ha: true
- id: '1737362594438'
  alias: Moyennes Romain
  description: ''
  triggers:
  - entity_id:
    - sensor.pronote_beck_romain_averages
    trigger: state
  conditions: []
  actions:
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'FRANCAIS'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.francais_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'HISTOIRE-GEOGRAPHIE'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.histoire_geographie_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'PHYSIQUE-CHIMIE'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.physique_chimie_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'MATHEMATIQUES'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.mathematiques_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'ESPAGNOL
        LV2' %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.espagnol_lv2_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'ANGLAIS LV1'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.anglais_lv1_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'ED.PHYSIQUE
        & SPORT.' %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.ed_physique_sport_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'TECHNOLOGIE'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.technologie_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'ARTS PLASTIQUES'
        %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.arts_plastiques_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'SCIENCES
        VIE & TERRE' %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.sciences_vie_terre_romain
    action: input_number.set_value
  - data:
      value: "{% set ns = namespace(moyenne=0) %} {% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}\n
        \ {% for i in range(0, items | count, 1) if items[i].subject == 'EDUCATION
        MUSICALE' %}\n     {% set ns.moyenne = items[i].average | replace (',','.')|float(0)
        %}\n  {% endfor %}\n  {{ ns.moyenne }}"
    target:
      entity_id: input_number.education_musicale_romain
    action: input_number.set_value
  - data:
      value: "{% set items = state_attr('sensor.pronote_beck_romain_averages','averages')%}
        {% set ns = namespace(nombre=0, moyenne_generale=0) %}\n  {% for i in range(0,
        items | count, 1) %}\n     {% set ns.moyenne_generale = items[i].average |
        replace (',','.') | float(0) + ns.moyenne_generale %}\n     {% set ns.nombre
        = ns.nombre + 1 %}\n  {% endfor %}\n{% set ns.moyenne_generale = ns.moyenne_generale
        / ns.nombre %}   {{ ns.moyenne_generale }}  "
    target:
      entity_id: input_number.moyenne_generale_romain
    action: input_number.set_value
  mode: single
